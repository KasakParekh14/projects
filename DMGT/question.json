[
{
    "question" : "What is a vertex in a graph?",
    "a": "A line connecting two points",
    "b": "A point where two edges meet",
    "c": "A path between two edges",
    "d": "A cycle in the graph",
    "answer": "b"
},
{
    "question" : "What is an edge in a graph?",
    "a": "A point connecting two vertices",
    "b": "A line connecting two vertices",
    "c": "A list of all vertices",
    "d": "A path between two cycles",
    "answer": "b"
},
{
    "question" : "In an undirected graph, what happens if an edge is removed?",
    "a": "The graph always becomes disconnected",
    "b": "The number of edges decreases",
    "c": "The graph becomes directed",
    "d": "The number of vertices increases",
    "answer": "b"
},
{
    "question" : "What is a simple graph?",
    "a": "A graph with no edges",
    "b": "A graph with no loops or multiple edges",
    "c": "A graph with only one vertex",
    "d": "A graph with a cycle",
    "answer": "b"
},
{
    "question" : "What is a cycle in a graph?",
    "a": "A path that starts and ends at the same vertex",
    "b": " A path that visits every vertex once",
    "c": "A path that covers all edges",
    "d": "A path with no repeated vertices",
    "answer": "a"
},
{
    "question" : "What is a disconnected graph?",
    "a": "A graph where all vertices are connected by edges",
    "b": "A graph where at least one vertex is not connected to any other vertex",
    "c": "A graph with no edges",
    "d": "A graph that contains a cycle",
    "answer": "b"
},
{
    "question" : "What is the degree of a vertex?",
    "a": "The number of edges connected to the vertex",
    "b": "The number of vertices in the graph",
    "c": "The number of cycles in the graph",
    "d": "The shortest path from the vertex to the source",
    "answer": "a"
},
{
    "question" : "What does it mean for a graph to be connected?",
    "a": "All vertices are connected by at least one path",
    "b": "The graph has no edges",
    "c": "The graph has exactly two vertices",
    "d": "The graph has multiple components",
    "answer": "a"
},
{
    "question" : "What is the adjacency list of a graph?",
    "a": "A list that represents which vertices are adjacent to each other",
    "b": "A list of all edges in the graph",
    "c": "A list of all cycles in the graph",
    "d": "A list of all vertices in the graph",
    "answer": "a"
},
{
    "question" : "What is the shortest path in a graph?",
    "a": "The path with the fewest edges between two vertices",
    "b": "The longest path between two vertices",
    "c": "A path that visits every vertex",
    "d": "A cycle that covers all edges",
    "answer": "a"
},
{
    "question" : "What is an acyclic graph?",
    "a": "A graph with no vertices",
    "b": "A graph with no cycles",
    "c": "A graph with multiple edges",
    "d": "A graph with only one cycleq",
    "answer": "b"
},
{
    "question" : "What is a weighted graph?",
    "a": "A graph with labels on the vertices",
    "b": "A graph where edges have values or weights",
    "c": "A graph with only one vertex",
    "d": "A graph with no edges",
    "answer": "b"
},
{
    "question" : "What does an isolated vertex in a graph mean?",
    "a": "A vertex that is not connected to any other vertex",
    "b": "A vertex that has the highest degree",
    "c": "A vertex that forms a cycle",
    "d": "A vertex that is connected to all others",
    "answer": "a"
},
{
    "question" : "In a directed graph, what is an incoming edge?",
    "a": "An edge that leaves a vertex",
    "b": "An edge that points toward a vertex",
    "c": "An edge that forms a cycle",
    "d": "An edge that connects two cycles",
    "answer": "b"
},
{
    "question" : "What is a walk in a graph?",
    "a": "A sequence of vertices and edges",
    "b": "A path that starts and ends at the same vertex",
    "c": "A cycle that visits every edge",
    "d": "A subgraph with no edges",
    "answer": "a"
},
{
    "question" : "What is the main difference between a path and a walk in a graph?",
    "a": "A path has no repeated vertices, while a walk may have repeated vertices",
    "b": "A walk is always a cycle, while a path is not",
    "c": "A path contains only one vertex, while a walk contains many vertices",
    "d": "A path is directed, while a walk is undirected",
    "answer": "a"
},
{
    "question" : "What is a leaf in a tree?",
    "a": "A vertex with no edges",
    "b": "A vertex with only one edge connected to it",
    "c": "A vertex that is part of a cycle",
    "d": "A vertex connected to every other vertex",
    "answer": "b"
},
{
    "question" : "What is a subgraph?",
    "a": "A graph that contains only cycles",
    "b": "A part of a graph containing some of its vertices and edges",
    "c": "A graph with no vertices",
    "d": "A graph with all its edges removed",
    "answer": "b"
},
{
    "question" : "What is the number of edges in a complete graph with N vertices?",
    "a": "N",
    "b": "N²",
    "c": "N(N-1)/2",
    "d": "N-1",
    "answer": "c"
},
{
    "question" : "What does a graph’s adjacency matrix show?",
    "a": "Whether two vertices are adjacent",
    "b": "The degree of each vertex",
    "c": "The number of cycles in the graph",
    "d": "The weight of the edges",
    "answer": "a"
},
{
    "question" : "What is a graph in mathematics?",
    "a": "A pictorial representation of data",
    "b": "A collection of nodes connected by edges",
    "c": "A type of bar chart",
    "d": "A system of linear equations",
    "answer": "b"
},
{
    "question" : "What is a vertex in a graph?",
    "a": "A line connecting two points",
    "b": "A point where edges meet",
    "c": "A diagonal of the graph",
    "d": "A number assigned to a node",
    "answer": "b"
},
{
    "question" : "In a directed graph, what do the arrows on edges represent?",
    "a": "The weight of the edge",
    "b": "The direction of the relationship between vertices",
    "c": "The distance between vertices",
    "d": "The color of the graph",
    "answer": "b"
},
{
    "question" : "What is the shortest path between two vertices in a graph called?",
    "a": "Minimum edge path",
    "b": "Hamiltonian path",
    "c": "Dijkstra's path",
    "d": "Shortest path",
    "answer": "d"
},
{
    "question" : "Which algorithm is commonly used to find the shortest path in a graph?",
    "a": "Prim's Algorithm",
    "b": "Kruskal's Algorithm",
    "c": "Dijkstra's Algorithm",
    "d": "Bellman-Ford Algorithm",
    "answer": "c"
},
{
    "question" : "What is a cycle in a graph?",
    "a": "A path that leads to the starting vertex",
    "b": "A path that covers all vertices",
    "c": "A path with no edges",
    "d": "A single line between two nodes",
    "answer": "a"
},
{
    "question" : "In graph theory, what is graph coloring?",
    "a": "Assigning a color to each vertex so no two adjacent vertices have the same color",
    "b": "Coloring all edges in the same color",
    "c": "Grouping vertices by size",
    "d": "Coloring vertices by their degree",
    "answer": "a"
},
{
    "question" : "Which of the following is a complete graph?",
    "a": "A graph with all vertices connected to each other",
    "b": "A graph with no cycles",
    "c": "A graph with weighted edges",
    "d": "A graph with directed edges only",
    "answer": "a"
},
{
    "question" : "What is an edge in a graph?",
    "a": "A point where two vertices meet",
    "b": "A connection between two vertices",
    "c": "A loop in the graph",
    "d": "The end of a graph",
    "answer": "b"
},
{
    "question" : "In a bipartite graph, how are the vertices divided?",
    "a": "Into two sets with all edges connecting vertices in different sets",
    "b": "Into three sets of vertices",
    "c": "Into cycles and paths",
    "d": "Into colored and non-colored vertices",
    "answer": "a"
},
{
    "question" : "Which of the following is a property of a tree in graph theory?",
    "a": "It has no cycles",
    "b": "It is always directed",
    "c": "Every vertex is connected to every other vertex",
    "d": "All vertices have the same degree",
    "answer": "a"
},
{
    "question" : "What is the degree of a vertex?",
    "a": "The number of edges connected to the vertex",
    "b": "The number of vertices connected to the graph",
    "c": "TThe number of vertices connected to the graph",
    "d": "The color of the vertex",
    "answer": "a"
},
{
    "question" : "What is a weighted graph?",
    "a": "A graph where vertices have weights",
    "b": "A graph where edges have weights or values",
    "c": "A graph where all vertices have the same degree",
    "d": "A graph where cycles are removed",
    "answer": "b"
},
{
    "question" : "Which algorithm is used to find the minimum spanning tree of a graph?",
    "a": "Dijkstra's Algorithm",
    "b": "Prim's Algorithm",
    "c": "Bellman-Ford Algorithm",
    "d": "Depth-First Search",
    "answer": "b"
},
{
    "question" : "In graph theory, what is an adjacency matrix?",
    "a": "A list of vertices and edges",
    "b": "A matrix that shows whether pairs of vertices are adjacent",
    "c": "A matrix that records the shortest paths between nodes",
    "d": "A list of vertex degrees",
    "answer": "b"
},
{
    "question" : "What is a subgraph?",
    "a": "A graph with only one vertex",
    "b": "A graph formed from a subset of vertices and edges of another graph",
    "c": "A graph with directed edges",
    "d": "A graph that is cyclic",
    "answer": "b"
},
{
    "question" : "What is the characteristic of an Eulerian path?",
    "a": "It visits every edge exactly once",
    "b": "It visits every vertex exactly once",
    "c": "It forms a cycle",
    "d": "It has no cycles",
    "answer": "a"
},
{
    "question" : "Which of the following graphs is acyclic?",
    "a": "A directed graph with cycles",
    "b": "A graph with a Hamiltonian path",
    "c": "A tree",
    "d": "A bipartite graph",
    "answer": "c"
},
{
    "question" : "What is the chromatic number of a graph?",
    "a": "The number of vertices in the graph",
    "b": "The minimum number of colors needed to color the graph",
    "c": "The number of cycles in the graph",
    "d": "The weight of the graph",
    "answer": "b"
},
{
    "question" : "What is a complete bipartite graph?",
    "a": "A graph with no edges",
    "b": "A graph in which every vertex of one set is connected to every vertex of the other set",
    "c": "A graph where all vertices are colored",
    "d": "A graph with directed edges",
    "answer": "b"
},
{
    "question" : "What is the time complexity of Breadth-First Search (BFS) in a graph with V vertices and E edges?",
    "a": "O(V)",
    "b": "O(E)",
    "c": "O(V + E)",
    "d": "O(V²)",
    "answer": "c"
},
{
    "question" : "Which graph traversal algorithm uses a stack as its data structure?",
    "a": "Breadth-First Search (BFS)",
    "b": "Depth-First Search (DFS)",
    "c": "Dijkstra's Algorithm",
    "d": "Kruskal's Algorithm",
    "answer": "b"
},
{
    "question" : "In a directed graph, what is a strongly connected component (SCC)?",
    "a": "A subset of vertices such that every vertex is reachable from every other vertex within the subset",
    "b": "A graph with no edges",
    "c": "A graph with multiple edges between the same vertices",
    "d": "A path that covers all vertices",
    "answer": "a"
},
{
    "question" : "Which algorithm is used to detect negative weight cycles in a graph?",
    "a": "Dijkstra's Algorithm",
    "b": "Bellman-Ford Algorithm",
    "c": "Kruskal's Algorithm",
    "d": "Depth-First Search",
    "answer": "b"
},
{
    "question" : "In a graph, what is an articulation point?",
    "a": "A point where two cycles meet",
    "b": "A vertex that, when removed, increases the number of connected components",
    "c": "A vertex with the highest degree",
    "d": "A point where two paths cross",
    "answer": "b"
},
{
    "question" : "What is a Hamiltonian path?",
    "a": "A path that visits every vertex exactly once",
    "b": "A path that visits every edge exactly once",
    "c": "A path that forms a cycle",
    "d": "A path that minimizes the number of vertices visited",
    "answer": "a"
},
{
    "question" : "What is the time complexity of Kruskal’s Algorithm for finding the Minimum Spanning Tree (MST)?",
    "a": "O(V²)",
    "b": "O(E log V)",
    "c": "O(V log E)",
    "d": "O(E²)",
    "answer": "b"
},
{
    "question" : "What is the adjacency list representation of a graph?",
    "a": "A list that shows the shortest path between vertices",
    "b": "A matrix that represents which vertices are adjacent",
    "c": "A list of all vertices and the vertices adjacent to each",
    "d": "A list of edges in the graph",
    "answer": "c"
},
{
    "question" : "What is a directed acyclic graph (DAG)?",
    "a": "A graph with directed edges and no cycles",
    "b": "A graph with no edges",
    "c": "A graph with edges that form multiple cycles",
    "d": "A graph where every edge is bidirectional",
    "answer": "a"
},
{
    "question" : "Which of the following algorithms is used to detect cycles in a graph?",
    "a": "Kruskal’s Algorithm",
    "b": "Bellman-Ford Algorithm",
    "c": "Depth-First Search (DFS)",
    "d": "Dijkstra’s Algorithm",
    "answer": "c"
},
{
    "question" : "In a graph, what is a cut edge (or bridge)?",
    "a": "An edge that, when removed, increases the number of connected components",
    "b": "An edge that forms a cycle",
    "c": "An edge that is part of the shortest path",
    "d": "An edge that connects two vertices of the same degree",
    "answer": "a"
},
{
    "question" : "What is the diameter of a graph?",
    "a": "The number of vertices in the graph",
    "b": "The length of the shortest cycle in the graph",
    "c": "The longest shortest path between any two vertices",
    "d": "The number of edges in the graph",
    "answer": "c"
},
{
    "question" : "Which algorithm is used for topological sorting in a directed acyclic graph (DAG)?",
    "a": "Breadth-First Search (BFS)",
    "b": "Depth-First Search (DFS)",
    "c": "Dijkstra’s Algorithm",
    "d": "Prim’s Algorithm",
    "answer": "b"
},
{
    "question" : "In a graph, what is a self-loop?",
    "a": "An edge that connects a vertex to itself",
    "b": "A cycle that starts and ends at the same vertex",
    "c": "A path that visits all vertices",
    "d": "A vertex that connects multiple edges",
    "answer": "a"
},
{
    "question" : "What is the time complexity of Prim's Algorithm for finding the Minimum Spanning Tree (MST) using a binary heap?",
    "a": "O(V²)",
    "b": "O(E log V)",
    "c": "O(V + E)",
    "d": "O(V log E)",
    "answer": "b"
},
{
    "question" : "In a graph, what is the in-degree of a vertex?",
    "a": "The number of edges leaving the vertex",
    "b": "The number of edges entering the vertex",
    "c": "The number of cycles in which the vertex participates",
    "d": "The distance from the source vertex",
    "answer": "b"
},
{
    "question" : "What is the out-degree of a vertex in a directed graph?",
    "a": "The number of edges leaving the vertex",
    "b": "The number of edges entering the vertex",
    "c": "The number of vertices connected to the graph",
    "d": "The total number of edges in the graph",
    "answer": "a"
},
{
    "question" : "Which of the following is NOT true about a tree?",
    "a": "It is acyclic",
    "b": "It is connected",
    "c": "It has exactly V - 1 edges if there are V vertices",
    "d": "It always contains a cycle",
    "answer": "d"
},
{
    "question" : "What is the difference between a path and a trail in graph theory?",
    "a": "A path allows repeated edges, a trail does not",
    "b": "A trail allows repeated vertices, a path does not",
    "c": "A path is always directed, a trail is undirected",
    "d": "A trail allows repeated edges, a path does not",
    "answer": "d"
},
{
    "question" : "What is a spanning tree of a graph?",
    "a": "A tree that connects all the vertices of the graph",
    "b": "A tree with the maximum number of edges",
    "c": "A cycle in the graph",
    "d": "A subgraph with only one vertex",
    "answer": "a"
},
{
    "question" : " What is the eccentricity of a vertex in a graph?",
    "a": "The degree of the vertex",
    "b": "The shortest distance to another vertex",
    "c": "The longest distance to any other vertex",
    "d": "The number of paths that pass through the vertex",
    "answer": "c"
},
{
    "question" : "Which of the following is a property of a planar graph?",
    "a": "It has no cycles",
    "b": "It can be drawn on a plane without edges crossing",
    "c": "It is always complete",
    "d": "It contains multiple disconnected components",
    "answer": "b"
},
{
    "question" : "What is the purpose of Tarjan’s Algorithm in graph theory?",
    "a": "To find the shortest path in a graph",
    "b": "To find strongly connected components in a directed graph",
    "c": "To find the minimum spanning tree",
    "d": "To detect cycles in an undirected graph",
    "answer": "b"
},
{
    "question" : "What does it mean for a graph to be bipartite?",
    "a": "It has two sets of vertices, and edges only exist between vertices in different set",
    "b": "It contains exactly two cycles",
    "c": "It has two components",
    "d": "It has two edges connecting each vertex",
    "answer": "a"
},
{
    "question" : "Which algorithm is typically used to find all-pairs shortest paths in a graph?",
    "a": "Dijkstra's Algorithm",
    "b": "Kruskal's Algorithm",
    "c": "Bellman-Ford Algorithm",
    "d": "Floyd-Warshall Algorithm",
    "answer": "d"
},
{
    "question" : "What is an isomorphic graph?",
    "a": "Two graphs with the same number of vertices and edges but different structures",
    "b": "Two graphs that can be mapped onto each other by renaming vertices",
    "c": "A graph with directed and undirected edges",
    "d": "A graph with no isolated vertices",
    "answer": "b"
},
{
    "question" : "What is a vertex cover in a graph?",
    "a": "A set of vertices such that every edge of the graph is incident to at least one vertex in the set",
    "b": "A set of edges that connect all vertices in the graph",
    "c": "A set of vertices that forms a cycle",
    "d": "A set of vertices with maximum degree",
    "answer": "a"
},
{
    "question" : "Which of the following is a characteristic of a regular graph?",
    "a": "Every vertex has the same degree",
    "b": "Every vertex is connected to every other vertex",
    "c": "The graph contains cycles",
    "d": "The graph is directed",
    "answer": "a"
},
{
    "question" : "Which algorithm is commonly used for solving the Single-Source Shortest Path problem in graphs with non-negative edge weights?",
    "a": "Bellman-Ford Algorithm",
    "b": "Prim's Algorithm",
    "c": "Dijkstra’s Algorithm",
    "d": "Floyd-Warshall Algorithm",
    "answer": "c"
},
{
    "question" : "What is a directed graph?",
    "a": "A graph where edges have no direction",
    "b": "A graph where edges have a direction, indicating a one-way relationship between vertices",
    "c": "A graph where all vertices are connected to each other",
    "d": "A graph with weighted edges",
    "answer": "b"
},
{
    "question" : "What is the minimum number of colors required to color a bipartite graph?",
    "a": "1",
    "b": "2",
    "c": "3",
    "d": "4",
    "answer": "b"
},
{
    "question" : "What does a Hamiltonian cycle in a graph represent?",
    "a": "A cycle that visits every vertex exactly once and returns to the starting point",
    "b": "A path that visits every edge exactly once",
    "c": "A set of vertices with the same degree",
    "d": "A path that covers all edges of the graph",
    "answer": "a"
},
{
    "question" : "What is the edge connectivity of a graph?",
    "a": "The minimum number of edges that must be removed to disconnect the graph",
    "b": "The number of edges in a graph",
    "c": "The number of vertices connected by an edge",
    "d": "The weight of all edges in the graph",
    "answer": "a"
},
{
    "question" : "What is a tree in graph theory?",
    "a": "A connected acyclic graph",
    "b": "A disconnected graph",
    "c": "A graph with cycles",
    "d": "A graph with self-loops",
    "answer": "a"
},
{
    "question" : "Which of the following properties is true for a tree?",
    "a": "It has V vertices and V edges",
    "b": "It has V vertices and V-1 edges",
    "c": "It has V-1 vertices and V edges",
    "d": "It has no vertices",
    "answer": "b"
},
{
    "question" : "Which of the following problems can be solved using a breadth-first search (BFS)?",
    "a": "Finding the shortest path in an unweighted graph",
    "b": "Finding the minimum spanning tree",
    "c": "Detecting cycles in a directed graph",
    "d": "Finding the longest path in a graph",
    "answer": "a"
},
{
    "question" : "What is a cut vertex in a graph?",
    "a": "A vertex that connects multiple components",
    "b": "A vertex whose removal increases the number of connected components",
    "c": "A vertex with the lowest degree",
    "d": "A vertex that forms a cycle",
    "answer": "b"
},
{
    "question" : "What does an adjacency matrix of a graph represent?",
    "a": "The list of all vertices in a graph",
    "b": "The number of vertices and edges in the graph",
    "c": "A matrix that represents which pairs of vertices are adjacent",
    "d": "The shortest path between vertices",
    "answer": "c"
},
{
    "question" : "Which of the following is an example of a planar graph?",
    "a": "A graph that can be drawn on a plane without any edges crossing",
    "b": "A graph that has directed edges",
    "c": "A graph that contains multiple cycles",
    "d": "A graph with weighted edges",
    "answer": "a"
},
{
    "question" : "What is the time complexity of Depth-First Search (DFS) in a graph with V vertices and E edges?",
    "a": "O(V + E)",
    "b": "O(V²)",
    "c": "O(E²)",
    "d": "O(V log V)",
    "answer": "a"
},
{
    "question" : "What is the degree sequence of a graph?",
    "a": "The list of degrees of all vertices in non-decreasing order",
    "b": "The total number of edges in the graph",
    "c": "The number of vertices connected to each vertex",
    "d": "The number of cycles in the graph",
    "answer": "a"
},
{
    "question" : "Which of the following algorithms is used to find the strongly connected components (SCCs) in a directed graph?",
    "a": "Tarjan's Algorithm",
    "b": "Dijkstra's Algorithm",
    "c": "Kruskal's Algorithm",
    "d": "Prim's Algorithm",
    "answer": "a"
},
{
    "question" : "What is an Eulerian circuit in a graph?",
    "a": "A circuit that visits every vertex exactly once",
    "b": "A circuit that visits every edge exactly once and returns to the starting vertex",
    "c": "A path that covers all edges in the graph",
    "d": "A path that minimizes the number of edges visited",
    "answer": "b"
},
{
    "question" : "What is a directed acyclic graph (DAG) typically used for?",
    "a": "Topological sorting",
    "b": "Finding minimum spanning trees",
    "c": "Calculating shortest paths",
    "d": "Detecting cycles",
    "answer": "a"
},
{
    "question" : "Which of the following is a bipartite graph?",
    "a": "A graph where vertices can be divided into two sets such that no two vertices in the same set are adjacent",
    "b": "A graph that contains at least two cycles",
    "c": "A graph with exactly two edges between each vertex",
    "d": "A graph where each vertex has two edges",
    "answer": "a"
},
{
    "question" : "What is the purpose of Kruskal’s Algorithm in graph theory?",
    "a": "To find the shortest path between two vertices",
    "b": "To detect cycles in a graph",
    "c": "To find the minimum spanning tree of a graph",
    "d": "To perform depth-first search",
    "answer": "c"
},
{
    "question" : "What is the average degree of a vertex in a graph with V vertices and E edges?",
    "a": "2E / V",
    "b": "E / V",
    "c": "V / E",
    "d": "E² / V",
    "answer": "a"
},
{
    "question" : "In a graph, what is the relationship between the number of edges and vertices in a tree?",
    "a": "A tree with V vertices has V edges",
    "b": "A tree with V vertices has V-1 edges",
    "c": "A tree with V vertices has 2V edges",
    "d": "A tree with V vertices has no edges",
    "answer": "b"
},
{
    "question" : "What is the chromatic number of a complete graph with N vertices?",
    "a": "1",
    "b": "N",
    "c": "N - 1",
    "d": "N / 2",
    "answer": "b"
},
{
    "question" : "What is the objective of Prim’s algorithm in graph theory?",
    "a": "To find the shortest path between two vertices",
    "b": "To find the minimum spanning tree",
    "c": "To detect cycles in a graph",
    "d": "To perform depth-first search",
    "answer": "b"
},
{
    "question" : "What is the time complexity of the Bellman-Ford algorithm for finding the shortest path in a graph with V vertices and E edges?",
    "a": "O(V + E)",
    "b": "O(V²)",
    "c": "O(VE)",
    "d": "O(V log V)",
    "answer": "c"
},
{
    "question" : "Which of the following is true about the adjacency list representation of a graph?",
    "a": "It is efficient for sparse graphs",
    "b": "It requires O(V²) space",
    "c": "It stores all vertices in a matrix",
    "d": "It is efficient for dense graphs",
    "answer": "a"
},
{
    "question" : "What is the eccentricity of a vertex in a graph?",
    "a": "The distance from the vertex to the farthest vertex in the graph",
    "b": "The degree of the vertex",
    "c": "The shortest path to the source",
    "d": "The total number of adjacent edges",
    "answer": "a"
},
{
    "question" : "What is the number of edges in a complete bipartite graph K(m, n)?",
    "a": "m + n",
    "b": "m * n",
    "c": "m² + n²",
    "d": "2m + 2n",
    "answer": "b"
},
{
    "question" : "What is the main purpose of a topological sort in a directed acyclic graph (DAG)?",
    "a": "To detect cycles in the graph",
    "b": "To order vertices such that for every directed edge u → v, vertex u appears before vertex v",
    "c": "To find the shortest path",
    "d": "To find the minimum spanning tree",
    "answer": "b"
},
{
    "question" : "What is the out-degree of a vertex in a directed graph?",
    "a": "The number of edges directed away from the vertex",
    "b": "The number of edges directed toward the vertex",
    "c": "The number of paths passing through the vertex",
    "d": "The total number of edges in the graph",
    "answer": "a"
},
{
    "question" : "Which of the following problems can be solved using dynamic programming on graphs?",
    "a": "Shortest path in a weighted graph",
    "b": "Minimum spanning tree",
    "c": "Eulerian path",
    "d": "Hamiltonian cycle",
    "answer": "a"
},
{
    "question" : "What is a matching in graph theory?",
    "a": "A set of edges where no two edges share a common vertex",
    "b": "A set of vertices that form a cycle",
    "c": "A set of vertices connected to all other vertices",
    "d": "A set of edges that form a cycle",
    "answer": "b"
},
{
    "question" : "Which algorithm is commonly used to find the maximum bipartite matching in a graph?",
    "a": "Edmonds-Karp Algorithm",
    "b": "Ford-Fulkerson Algorithm",
    "c": "Gale-Shapley Algorithm",
    "d": "Hungarian Algorithm",
    "answer": "d"
},
{
    "question" : "What is the diameter of a graph?",
    "a": "The maximum distance between any two vertices in the graph",
    "b": "The minimum distance between two adjacent vertices",
    "c": "The length of the shortest cycle",
    "d": "The number of edges in the longest path",
    "answer": "a"
},
{
    "question" : "What is the purpose of the Bellman-Ford algorithm?",
    "a": "To find the shortest paths from a single source in graphs with negative edge weights",
    "b": "To find the minimum spanning tree",
    "c": "To find the longest path in a graph",
    "d": "To detect cycles in a graph",
    "answer": "a"
},
{
    "question" : "Which of the following is a characteristic of a strongly connected directed graph?",
    "a": "Every vertex is reachable from every other vertex",
    "b": "The graph contains no cycles",
    "c": "The graph is undirected",
    "d": "The graph has no edges",
    "answer": "a"
},
{
    "question" : "What is the running time of Depth-First Search (DFS) in a graph with V vertices and E edges?",
    "a": "O(V + E)",
    "b": "O(V²)",
    "c": "O(E²)",
    "d": "O(V log V)",
    "answer": "a"
},
{
    "question" : "What is the time complexity of the Floyd-Warshall algorithm for finding all-pairs shortest paths in a graph with V vertices?",
    "a": "O(V³)",
    "b": "O(V²)",
    "c": "O(V³)",
    "d": "O(V log V)",
    "answer": "c"
},
{
    "question" : "Which of the following conditions guarantees that a graph is bipartite?",
    "a": "The graph has no odd-length cycles",
    "b": "The graph has only even-degree vertices",
    "c": "The graph has no self-loops",
    "d": "The graph is connected",
    "answer": "a"
},
{
    "question" : "What is the chromatic polynomial of a graph?",
    "a": "The number of colors needed to color the graph",
    "b": "The polynomial that counts the number of ways a graph can be colored using a given number of colors",
    "c": "The formula that gives the degree of each vertex in a graph",
    "d": "The number of edges connected to each vertex",
    "answer": "b"
},
{
    "question" : "Which algorithm is designed specifically to find articulation points (cut vertices) in a graph?",
    "a": "Dijkstra’s Algorithm",
    "b": "Bellman-Ford Algorithm",
    "c": "Tarjan’s Algorithm",
    "d": "Floyd-Warshall Algorithm",
    "answer": "b"
},
{
    "question" : "In a graph with weighted edges, what does Dijkstra’s Algorithm guarantee?",
    "a": "It finds the shortest path between two vertices in graphs with negative edge weights",
    "b": "It finds the longest path in the graph",
    "c": "It finds the shortest path in graphs with non-negative edge weights",
    "d": "It guarantees the shortest path for both negative and non-negative weights",
    "answer": "c"
},
{
    "question" : "What is the time complexity of Kruskal's algorithm for finding the Minimum Spanning Tree (MST) in a graph with E edges and V vertices?",
    "a": "O(E log E)",
    "b": "O(V log V)",
    "c": "O(E + V)",
    "d": "O(V²)",
    "answer": "a"
},
{
    "question" : "What is the relationship between the eigenvalues of the adjacency matrix of a graph and the graph's structure?",
    "a": "The eigenvalues represent the degrees of vertices",
    "b": "The largest eigenvalue indicates the chromatic number",
    "c": "The eigenvalues can provide insights into the graph's connectivity and number of cycles",
    "d": "The smallest eigenvalue is always negative for connected graphs",
    "answer": "c"
},
{
    "question" : "What is the meaning of the term 'Eulerian path' in a graph?",
    "a": "A path that visits every vertex at least once",
    "b": "A path that visits every edge exactly once",
    "c": "A path that covers all vertices and edges",
    "d": "A path that has no repeated edges",
    "answer": "b"
},
{
    "question" : "What is the total number of spanning trees possible for a complete graph with N vertices?",
    "a": "N^(N-2)",
    "b": "N(N-1)/2",
    "c": "N²",
    "d": "2^(N-1)",
    "answer": "a"
},
{
    "question" : "What is the objective of the Ford-Fulkerson algorithm?",
    "a": "To find the minimum spanning tree",
    "b": "To find the maximum flow in a flow network",
    "c": "To find the shortest path in a weighted graph",
    "d": "To detect cycles in a graph",
    "answer": "b"
}
]